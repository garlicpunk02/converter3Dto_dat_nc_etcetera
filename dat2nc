import numpy as np
from netCDF4 import Dataset

# === Ввод имени без расширения ===
basename = input("Введите имя dat-файла без расширения: ")
input_dat = basename + ".dat"
output_nc = basename + ".nc"

print(f"Чтение {input_dat}...")
data = np.loadtxt(input_dat, dtype=int)
Z, Y, X, M = data[:, 0], data[:, 1], data[:, 2], data[:, 3]

Nz, Ny, Nx = Z.max()+1, Y.max()+1, X.max()+1
mask3d = np.ones((Nz, Ny, Nx), dtype=np.uint8)
mask3d[Z, Y, X] = M

# === Инвертируем по оси Z (глубина сверху вниз) ===
mask3d = mask3d[::-1, :, :]


# Создаём фиктивную временную размерность
T = 1
mask4d = mask3d[np.newaxis, :, :, :]  # (1, Z, Y, X)

# Координаты
x = np.arange(Nx)
y = np.arange(Ny)
z = np.arange(Nz)
t = np.array([0])  # фиктивное время

print(f"Запись в {output_nc}...")
with Dataset(output_nc, "w", format="NETCDF4") as nc:
    # Размерности
    nc.createDimension("time", T)
    nc.createDimension("z", Nz)
    nc.createDimension("y", Ny)
    nc.createDimension("x", Nx)

    # Координаты с атрибутами
    var_t = nc.createVariable("time", "f4", ("time",))
    var_t[:] = t
    var_t.units = "hours since 2000-01-01 00:00:00"
    var_t.long_name = "time"
    var_t.axis = "T"

    var_z = nc.createVariable("z", "f4", ("z",))
    #var_z[:] = z
    var_z[:] = np.arange(Nz)
    var_z.units = "meters"
    var_z.long_name = "depth"
    var_z.axis = "Z"
    var_z.positive = "down"

    #ради приведения к нормальным размерам (чтобы моделька была в метрах, а не в тысячи градусов широты)
    #выбираем виртуальную речку, протекающую через Кремль
    # Центр Москвы (широта, долгота)
    lat0 = 55.7558
    lon0 = 37.6173

    # Перевод метров в градусы
    DEG_PER_M_Y = 1 / 110574  # широта — почти постоянна
    DEG_PER_M_X = 1 / (111320 * np.cos(np.radians(lat0)))  # долгота — зависит от широты
    
    # Географические координаты для GrADS
    x = lon0 + np.arange(Nx) * DEG_PER_M_X
    y = lat0 + np.arange(Ny) * DEG_PER_M_Y

    var_y = nc.createVariable("y", "f4", ("y",))
    var_y[:] = y
    var_y.units = "degrees_north"
    var_y.standard_name = "latitude"
    var_y.axis = "Y"
    var_y.standard_name = "latitude"

    var_x = nc.createVariable("x", "f4", ("x",))
    var_x[:] = x
    var_x.units = "degrees_east"
    var_x.long_name = "longitude"
    var_x.axis = "X"
    var_x.standard_name = "longitude"

    # Переменная маски
    fill_val = 127
    var_mask = nc.createVariable("land", "i1", ("time", "z", "y", "x"), fill_value=fill_val)
    var_mask[:, :, :, :] = mask4d
    var_mask.long_name = "landscape depth"
    var_mask.units = "1"
    var_mask.missing_value = fill_val  # безопасно

print("Файл готов. GrADS сможет открыть напрямую.")
