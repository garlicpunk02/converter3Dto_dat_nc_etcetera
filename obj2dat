import numpy as np
import trimesh
import sys
import os

# === НАСТРОЙКИ ===
basename = input("Введите имя файла без расширения (например, river5): ")
input_obj = basename + ".obj"
output_dat = basename + ".dat"
voxel_size = 1.0

if not os.path.exists(input_obj):
    print(f"Нет такого файла: {input_obj}")
    sys.exit(1)

print("Загрузка OBJ...")
mesh = trimesh.load(input_obj)
if not isinstance(mesh, trimesh.Trimesh):
    mesh = mesh.dump().sum()

print("Вокселизация...")
vxl = mesh.voxelized(pitch=voxel_size)
filled = vxl.fill()

print("Создание массива...")
points = filled.points
indices = np.floor(points / voxel_size).astype(int)

# Нормализация
indices -= indices.min(axis=0)
x, y, z = indices[:, 0], indices[:, 1], indices[:, 2]

# Определяем размеры маски
xmax, ymax, zmax = x.max()+1, y.max()+1, z.max()+1
mask = np.ones((zmax, ymax, xmax), dtype=np.uint8)  # 1 = воздух

print("Отмечаем внутренние воксели как занятые...")
mask[z, y, x] = 0  # 0 = занято

# Собираем в DAT: Z Y X MASK
zz, yy, xx = np.meshgrid(np.arange(zmax), np.arange(ymax), np.arange(xmax), indexing='ij')
data = np.column_stack((zz.ravel(), yy.ravel(), xx.ravel(), mask.ravel()))

print(f"Сохраняем в {output_dat}...")
np.savetxt(output_dat, data, fmt="%d")

print(f"Успешно. Итоговых вокселей: {mask.size}")
print(f"   Занято (0): {np.count_nonzero(mask == 0)}")
print(f"   Пусто (1):  {np.count_nonzero(mask == 1)}")
print(f"   Размер: Z={zmax}, Y={ymax}, X={xmax}")
