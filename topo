import trimesh
import numpy as np
import matplotlib.pyplot as plt
from math import ceil
import os

# === Ввод имени ===
print("Перед вводом имени объекта убедитесь, что объект верно экспортирован: ось вперед -- y, ось вверх -- z, уровень моря точно в нуле по оси z")
basename = input("Введите имя файла без расширения (например, river): ").strip() #стрип удаляет лишние пробелы по краям
obj_path = basename + ".obj"
output_prefix = basename + "_topo"

# === Параметры ===
vox = 1.0  # воксель = 1 м
#координаты Москвы: по приколу, потому что иначе Градс будет рисовать метры как градусы широты и долготы
lat0 = 55.7558
lon0 = 37.6173
#перевод градусов в метры
DEG_PER_M_Y = 1 / 110574
DEG_PER_M_X = 1 / (111320 * np.cos(np.radians(lat0)))
#непосредственный перевод в метры на географической карте
dx = vox * DEG_PER_M_X
dy = vox * DEG_PER_M_Y

# Загрузка меша
mesh = trimesh.load(obj_path)

#создание массива координат вершин
vert_massive = mesh.vertices

#округление всех координат до 1 метра, потому что вокселизация не всегда помогает
vert_massive = np.floor(vert_massive).astype(int)

#выписываем пределы массива; в простейшем случае минимум должен быть в нуле в обоих переменных _min
x_min, x_max = np.min(vert_massive[:, 0]), np.max(vert_massive[:, 0])
y_min, y_max = np.min(vert_massive[:, 1]), np.max(vert_massive[:, 1])
z_min, z_max = np.min(vert_massive[:, 2]), np.max(vert_massive[:, 2])

x_size = int(x_max - x_min + 1)
y_size = int(y_max - y_min + 1)
z_size = int(z_max - z_min + 1)

print("Наименьший x: ", x_min)
print("Наименьший y: ", y_min)
print("Максимальная глубина z: ", z_min)
print("Максимальная высота по z: ", z_max)

#сдвиг начала модели в ноль координат для упрощения
# Сдвигаем координаты так, чтобы левый нижний угол стал началом координат
vert_massive[:, 0] -= x_min  # X
vert_massive[:, 1] -= y_min  # Y
xmin_moved, ymin_moved = np.min(vert_massive[:,0]), np.min(vert_massive[:,1])
print("Наименьший x после сдвига: ", xmin_moved)
print("Наименьший y после сдвига: ", ymin_moved)
assert xmin_moved == 0 and ymin_moved == 0, "Что-то пошло не так: начало координат не сдвинуто в (0,0)"


#формируем массив топо
undef_value = -9999.0 #по умолчанию в градс для отсутствия данных используется это число
topo = np.full((y_size, x_size), fill_value=undef_value)

xi = vert_massive[:, 0].astype(int)
yi = vert_massive[:, 1].astype(int)
zi = vert_massive[:, 2]
np.maximum.at(topo, (yi, xi), zi)  #ищем максимальное значение. На плоской поверхности уровня моря это должен быть ноль всюду.

#Сохраняем в .dat
dat_path = output_prefix + ".dat"
topo.astype(np.float32).tofile(dat_path)
print(f"Файл {dat_path} успешно сохранён.")

print("x_size = ", x_size)
print("y_size = ", y_size)

#создание расшифровочного файла
ctl_path = output_prefix + ".ctl"

#запись текстового файла с помощью тройных кавычек
#dset ^{os.path.basename(dat_path)} -- означает "положить в ту же папку, где лежит ранее сформированный дат-файл"
with open(ctl_path, 'w') as f:
    f.write(f"""dset ^{os.path.basename(dat_path)} 
undef {undef_value}
title Topographic map
xdef {x_size} linear {lon0:.6f} {dx:.8f}
ydef {y_size} linear {lat0:.6f} {dy:.8f}
zdef 1 linear 1 1
tdef 1 linear 00Z01jan2000 1dy
vars 1
topo 0 99 Topographic height
endvars
""")
    
print(f"Файл {ctl_path} успешно создан.")
    
